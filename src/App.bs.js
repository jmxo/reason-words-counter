// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as CopySvg from "./icons/copy.svg";
import * as TimesSvg from "./icons/times.svg";
import * as ReactCopyToClipboard from "react-copy-to-clipboard";
import * as Button$ReactHooksTemplate from "./Button.bs.js";

((require('./App.css')));

function countWordsInString(text) {
  var spacesRegex = new RegExp("\\s+");
  if (text === "") {
    return 0;
  } else {
    return text.trim().split(spacesRegex).length;
  }
}

var make = TimesSvg.default;

var TimesIcon = /* module */[/* make */make];

var make$1 = CopySvg.default;

var CopyIcon = /* module */[/* make */make$1];

var CopyClipboard = /* module */[];

function App(Props) {
  var match = React.useState((function () {
          return "";
        }));
  var setText = match[1];
  var text = match[0];
  var handleTextChange = function (e) {
    return Curry._1(setText, e.target.value);
  };
  var handleClearClick = function (param) {
    return Curry._1(setText, (function (param) {
                  return "";
                }));
  };
  var wordsCountText = String(countWordsInString(text)) + " words";
  return React.createElement("div", {
              className: "App"
            }, React.createElement("div", {
                  className: "header"
                }, React.createElement("h3", undefined, "Words Counter"), React.createElement("span", undefined, wordsCountText)), React.createElement("textarea", {
                  placeholder: "Express yourself...",
                  value: text,
                  onChange: handleTextChange
                }), React.createElement("div", {
                  className: "footer"
                }, React.createElement(Button$ReactHooksTemplate.make, {
                      onClick: handleClearClick,
                      title: "Clear text",
                      children: React.createElement(make, {
                            height: "20px"
                          }),
                      disabled: text.length === 0
                    }), React.createElement(ReactCopyToClipboard.CopyToClipboard, {
                      text: text,
                      children: React.createElement(Button$ReactHooksTemplate.make, {
                            title: "Copy text",
                            children: React.createElement(make$1, {
                                  height: "20px"
                                }),
                            disabled: text.length === 0,
                            category: /* PRIMARY */0
                          })
                    })));
}

var make$2 = App;

export {
  countWordsInString ,
  TimesIcon ,
  CopyIcon ,
  CopyClipboard ,
  make$2 as make,
  
}
/*  Not a pure module */
